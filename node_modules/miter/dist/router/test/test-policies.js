"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const policy_decorator_1 = require("../../decorators/policies/policy.decorator");
let Policy1 = class Policy1 {
    handle(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            return "one";
        });
    }
};
Policy1 = __decorate([
    policy_decorator_1.Policy()
], Policy1);
exports.Policy1 = Policy1;
let Policy2 = class Policy2 {
    handle(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            return "two";
        });
    }
};
Policy2 = __decorate([
    policy_decorator_1.Policy()
], Policy2);
exports.Policy2 = Policy2;
let Policy3 = class Policy3 {
    handle(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            return "three";
        });
    }
};
Policy3 = __decorate([
    policy_decorator_1.Policy()
], Policy3);
exports.Policy3 = Policy3;
let UnusedPolicy = class UnusedPolicy {
    handle(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            return "unused";
        });
    }
};
UnusedPolicy = __decorate([
    policy_decorator_1.Policy()
], UnusedPolicy);
exports.UnusedPolicy = UnusedPolicy;
let EarlyReturnPolicy = class EarlyReturnPolicy {
    handle(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            res.status(123).send('Mwen fini!');
            return "early-return";
        });
    }
};
EarlyReturnPolicy = __decorate([
    policy_decorator_1.Policy()
], EarlyReturnPolicy);
exports.EarlyReturnPolicy = EarlyReturnPolicy;
let ThrowPolicy = class ThrowPolicy {
    handle(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error(`Haha, joke's on you!`);
        });
    }
};
ThrowPolicy = __decorate([
    policy_decorator_1.Policy()
], ThrowPolicy);
exports.ThrowPolicy = ThrowPolicy;
//# sourceMappingURL=test-policies.js.map