import { OrmMetadata } from '../metadata/server/orm';
import { DatabaseMetadata } from '../metadata/server/database';
import { Logger } from '../services/logger';
import { LoggerCore } from '../services/logger-core';
import { ClsNamespaceService } from '../services/cls-namespace.service';
import { TransactionT } from '../core/transaction';
import * as __Sequelize from 'sequelize';
export declare class Sequelize {
    private ormMeta;
    private dbMeta;
    private loggerCore;
    private logger;
    private namespace;
    constructor(ormMeta: OrmMetadata, dbMeta: DatabaseMetadata, loggerCore: LoggerCore, logger: Logger, namespace: ClsNamespaceService);
    private sqlLogger;
    private _initialized;
    init(): Promise<void>;
    private sql;
    sync(): Promise<any>;
    define(modelName: string, attributes: __Sequelize.DefineAttributes, options: __Sequelize.DefineOptions<{}>): any;
    currentTransaction: TransactionT | undefined;
    transaction(transactionName: string, transaction?: TransactionT | null): Promise<TransactionT | undefined>;
}
