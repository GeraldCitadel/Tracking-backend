import { StaticModelT, ModelT } from '../../core/model';
import { Sequelize } from '../sequelize';
import { LoggerCore } from '../../services/logger-core';
import { ClsNamespaceService } from '../../services/cls-namespace.service';
import { TransactionT } from '../../core/transaction';
import * as __Sequelize from 'sequelize';
export declare class FakeSequelize extends Sequelize {
    constructor(core: LoggerCore, clsNamespace: ClsNamespaceService, ...models: StaticModelT<ModelT<any>>[]);
    init(): Promise<void>;
    sync(): Promise<void>;
    define(modelName: string, attributes: __Sequelize.DefineAttributes, options: __Sequelize.DefineOptions<{}>): __Sequelize.Model<{}, {}>;
    transaction(transactionName: string, transaction?: TransactionT): Promise<TransactionT>;
}
