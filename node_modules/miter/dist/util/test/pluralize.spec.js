"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const sinonChai = require("sinon-chai");
chai_1.use(sinonChai);
const pluralize_1 = require("../pluralize");
describe('util/pluralize', () => {
    it('should return the plural form of the word passed in', () => {
        chai_1.expect(pluralize_1.pluralize('apple')).to.eql('apples');
        chai_1.expect(pluralize_1.pluralize('dog')).to.eql('dogs');
        chai_1.expect(pluralize_1.pluralize('cat')).to.eql('cats');
        chai_1.expect(pluralize_1.pluralize('mouse')).to.eql('mice');
        chai_1.expect(pluralize_1.pluralize('moose')).to.eql('moose');
        chai_1.expect(pluralize_1.pluralize('orange')).to.eql('oranges');
    });
    it('should return the same word if it is already plural', () => {
        chai_1.expect(pluralize_1.pluralize('apples')).to.eql('apples');
        chai_1.expect(pluralize_1.pluralize('dogs')).to.eql('dogs');
        chai_1.expect(pluralize_1.pluralize('cats')).to.eql('cats');
        chai_1.expect(pluralize_1.pluralize('mice')).to.eql('mice');
        chai_1.expect(pluralize_1.pluralize('moose')).to.eql('moose');
        chai_1.expect(pluralize_1.pluralize('oranges')).to.eql('oranges');
    });
    it('should return the singular form of the word passed in if plural=false', () => {
        chai_1.expect(pluralize_1.pluralize('apples', false)).to.eql('apple');
        chai_1.expect(pluralize_1.pluralize('dogs', false)).to.eql('dog');
        chai_1.expect(pluralize_1.pluralize('cats', false)).to.eql('cat');
        chai_1.expect(pluralize_1.pluralize('mice', false)).to.eql('mouse');
        chai_1.expect(pluralize_1.pluralize('moose', false)).to.eql('moose');
        chai_1.expect(pluralize_1.pluralize('oranges', false)).to.eql('orange');
    });
    it('should return the same word if already singular and plural=false', () => {
        chai_1.expect(pluralize_1.pluralize('apple', false)).to.eql('apple');
        chai_1.expect(pluralize_1.pluralize('dog', false)).to.eql('dog');
        chai_1.expect(pluralize_1.pluralize('cat', false)).to.eql('cat');
        chai_1.expect(pluralize_1.pluralize('mouse', false)).to.eql('mouse');
        chai_1.expect(pluralize_1.pluralize('moose', false)).to.eql('moose');
        chai_1.expect(pluralize_1.pluralize('orange', false)).to.eql('orange');
    });
});
//# sourceMappingURL=pluralize.spec.js.map