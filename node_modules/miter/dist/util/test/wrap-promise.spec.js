"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const sinonChai = require("sinon-chai");
chai_1.use(sinonChai);
const wrap_promise_1 = require("../wrap-promise");
describe('util/wrapPromise', () => {
    it('should resolve the promise when the callback function is invoked', () => __awaiter(this, void 0, void 0, function* () {
        let callbackFn = (millis, done) => {
            setTimeout(done, millis);
        };
        yield wrap_promise_1.wrapPromise(callbackFn, 10);
    }));
});
//# sourceMappingURL=wrap-promise.spec.js.map