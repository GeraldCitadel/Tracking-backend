"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const injector_1 = require("../core/injector");
const service_decorator_1 = require("../decorators/services/service.decorator");
const logger_1 = require("./logger");
const cls_namespace_service_1 = require("./cls-namespace.service");
let ORMService = class ORMService {
    constructor(_injector, _namespace) {
        this._injector = _injector;
        this._namespace = _namespace;
    }
    get injector() {
        return this._injector;
    }
    get namespace() {
        return this._namespace;
    }
    start() {
        return __awaiter(this, void 0, void 0, function* () { });
    }
    stop() {
        return __awaiter(this, void 0, void 0, function* () { });
    }
    get currentTransaction() {
        return this.namespace.get('transaction');
    }
    set currentTransaction(val) {
        this.namespace.set('transaction', val);
    }
    transaction(transactionName, transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error(`ORMService.transaction has no default implementation.`);
        });
    }
};
ORMService = __decorate([
    service_decorator_1.Service({
        provide: {
            useCallback: (logger) => {
                logger.error(`Failed to inject ORM service. There is no default implementation. Did you look into miter-sequelize?`);
                return null;
            },
            deps: [logger_1.Logger],
            cache: true
        }
    }),
    __metadata("design:paramtypes", [injector_1.Injector,
        cls_namespace_service_1.ClsNamespaceService])
], ORMService);
exports.ORMService = ORMService;
//# sourceMappingURL=orm.service.js.map