"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const continuation_local_storage_1 = require("continuation-local-storage");
const server_1 = require("../metadata/server/server");
const service_decorator_1 = require("../decorators/services/service.decorator");
let ClsNamespaceService = ClsNamespaceService_1 = class ClsNamespaceService {
    constructor(meta) {
        this.meta = meta;
        let _name = `miter-cls-(${this.meta.name || ''})-${ClsNamespaceService_1.namespaceNum++}`;
        this._namespace = continuation_local_storage_1.createNamespace(_name);
    }
    start() {
        return __awaiter(this, void 0, void 0, function* () { });
    }
    get name() {
        return this._namespace.name;
    }
    get activeContext() {
        return this.active;
    }
    get active() {
        return this._namespace.active;
    }
    createContext() {
        return this._namespace.createContext();
    }
    get(key) {
        return this._namespace.get(key);
    }
    set(key, val) {
        this._namespace.set(key, val);
    }
    run(callback) {
        return this._namespace.run(callback);
    }
    runAndReturn(callback) {
        return this._namespace.runAndReturn(callback);
    }
    bind(callback, context) {
        return this._namespace.bind(callback, context);
    }
    bindEmitter(emitter) {
        return this._namespace.bindEmitter(emitter);
    }
};
ClsNamespaceService.namespaceNum = 0;
ClsNamespaceService = ClsNamespaceService_1 = __decorate([
    service_decorator_1.Service(),
    __metadata("design:paramtypes", [server_1.ServerMetadata])
], ClsNamespaceService);
exports.ClsNamespaceService = ClsNamespaceService;
var ClsNamespaceService_1;
//# sourceMappingURL=cls-namespace.service.js.map