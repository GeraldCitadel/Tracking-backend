import { ServerMetadataT } from './server-t';
import { CtorT } from '../../core/ctor';
import { ServiceT } from '../../core/service';
export declare class ServerMetadata {
    private _meta;
    constructor(_meta: ServerMetadataT);
    readonly originalMeta: ServerMetadataT;
    readonly name: string;
    readonly port: string | number;
    readonly allowCrossOrigin: boolean;
    readonly services: CtorT<ServiceT>[];
    readonly inject: (({
        provide: CtorT<any>;
    } & {
        useClass: CtorT<any>;
    }) | ({
        provide: CtorT<any>;
    } & {
        useValue: any;
    }) | ({
        provide: CtorT<any>;
    } & {
        useCallback: (...args: any[]) => any;
        cache?: boolean | undefined;
        deps?: (string | CtorT<any> | (() => string | CtorT<any>))[] | undefined;
    }))[];
    readonly logLevel: "verbose" | "warn" | "info" | "error" | {
        [name: string]: "verbose" | "warn" | "info" | "error";
    };
    readonly debugBreakpoint: () => void;
}
